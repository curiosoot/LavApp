@model IEnumerable<Proyecto_LavApp.Models.reserva_servicio>
@using Proyecto_LavApp.Models

@{
    ViewBag.Title = "Index";
}

<h2 class="text-center"><i class="fas fa-ticket-alt"></i> Tus Reservas</h2>

@{
    if (Session["rol"] != null)
    {
        var rol = (rolesCls)Session["rol"];
        if (rol.sn_cliente == true)
        {
            <p class="text-right">
                <a href="/reserva_servicio_/Crear" class="btn btn-primary"><span class="mr-2">Crear Reserva </span><i class="fas fa-plus-circle text-white"></i></a>
            </p>
        }
    }
}

<table id="table_id" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.txt_nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.cedula)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.txt_email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.telefono)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.id_vehiculo)
            </th>
            <th style="width:200px">
                @Html.DisplayNameFor(model => model.Fecha_Servcio_Full)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.txt_observacion)
            </th>
            @{
                if (Session["Usuario"] != null)
                {
                    var rol = (rolesCls)Session["rol"];

                    if (rol.sn_cliente)
                    {
                        <th style="width:250px" class="text-center">Acciones</th>
                    }
                }
            }
            
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.txt_nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.cedula)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.txt_email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.telefono)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.vehiculos.nom_vehiculo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha_Servcio_Full)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.txt_observacion)
            </td>
            @{
                if (Session["Usuario"] != null)
                {
                    var rol = (rolesCls)Session["rol"];

                    if (rol.sn_cliente)
                    {
                        <td class="text-center">
                            <a href="/reserva_servicio_/Editar/@item.id_reserva" class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Editar Reserva"><i class="fas fa-edit"></i></a>
                            @*<a href="/reserva_servicio_/Eliminar/@item.id_reserva" class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Eliminar Reserva"><i class="fas fa-minus-circle"></i></a>*@
                            <button class="btn btn-danger" data-id="@item.id_reserva" data-toggle="tooltip" data-placement="top" title="Eliminar Reserva"><i class="fas fa-minus-circle"></i></button>
                        </td>
                    }
                }
            }
            
        </tr>
        }
    </tbody>

</table>

@section scripts{
    <script>

        $('#table_id tbody').on('click', 'button', function () {
            var table = $('#table_id').DataTable();
            var id = $(this).data("id");

            eliminarReserva(id, () => {
                table.row($(this).parents('tr')).remove().draw();
                Swal.fire('Registro Eliminado!');
            });
        });

        function eliminarReserva(id, funcionSuccess) {
            Swal.fire({
                title: '¿Desea eliminar el registro?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: `Aceptar`,
                denyButtonText: `Cancelar`,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
            }).then((result) => {
                if (result.isConfirmed) {
                    EjecutarAjax("@Url.Action("Eliminar", "reserva_servicio_")", "GET", { id }, funcionSuccess);
                }
            })
        };

        function GetRequestVerificationToken() {
            return $("input:hidden[name=\"__RequestVerificationToken\"]").val();
        }

        function EjecutarAjax(url, type, values, funcionSuccess, variable) {

            var types = ["POST", "PUT", "DELETE"];
            var token = GetRequestVerificationToken();

            var sendHeaders = {};
            if (types.indexOf(type) > -1 && token != null && token !== "") {
                sendHeaders["__RequestVerificationToken"] = token;
            }

            $.ajax({
                cache: false,
                url: url,
                type: type,
                data: values,
                headers: sendHeaders,
                success: function (data) {
                    if (data.error == true) {
                        Swal.fire({
                            icon: 'error',
                            text: data.message,
                        });
                    } else {
                        funcionSuccess();                        
                    }
                },
                error: function (jqXHR, exception) {
                    var errorAjax = "";
                    if (jqXHR.status === 0) {
                        errorAjax += "No cuenta con conexion a internet, \xF3 su sesion ha caducado.";
                        alert(errorAjax);
                        return;
                    } else if (jqXHR.status === 404) {
                        alert(errorAjax, 404);
                    } else if (jqXHR.status === 500) {
                        alert(errorAjax, 500);
                    } else if (exception === "parsererror") {
                        errorAjax += "Error al convertir el objeto en JSON";
                        alert(errorAjax);
                    } else if (exception === "timeout") {
                        errorAjax += "Tiempo de espera agotado. Por favor comuniquese con el administrador del sistema";
                        alert(errorAjax);
                    } else if (exception === "abort") {
                        errorAjax += "Petición AJAX abortada. Por favor comuniquese con el administrador del sistema";
                        alert(errorAjax);
                    } else {
                        errorAjax += "Error inesperado (" + jqXHR.responseText + "). Por favor comuniquese con el administrador del sistema";
                        alert(errorAjax);
                    }
                },
                complete: function (data) {

                }

            });
        }

        $(document).ready(function () {

            $('#table_id').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Visibilidad"
                    }
                }
            });
        });
    </script>
}